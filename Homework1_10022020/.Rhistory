acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y)/g(Y)/m]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
t <- 1 #theta
f <- function(x){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y)/g(Y)/m]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
t <- 0.9 #theta
f <- function(x){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y)/g(Y)/m]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
t <- 0.9 #theta
f <- function(x){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- exp(t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y)/g(Y)/m]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
t <- 1 #theta
f <- function(x){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- exp(t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y)/g(Y)/m]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
t <- 1 #theta
f <- function(x){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m,col = 'green')#adjusted pdf
knitr::opts_chunk$set(echo = TRUE)
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y[U2<=f(Y1)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
#lines(xx,f(xx,runif(n,0,1)),col = 'red')#true normal pdf
#lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
#lines(xx,f(xx,runif(n,0,1)),col = 'red')#true normal pdf
#lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx1 = seq(min(X),max(X),0.01)
lines(xx,f(xx,runif(n,0,1)),col = 'red')#true normal pdf
#lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx1 = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
#lines(xx,g(xx)*m,col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx1 = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m(xx),col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m(xx),col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(Y2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m(xx),col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1)
Y1 <- gamma(U1) #Y = g^-1(U1)
X = Y1[U2<=f(Y1,Y2)/g(Y1)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m(xx),col = 'green')#adjusted pdf
acceptReject <- function(f,g,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y2 <- exp(U1) #considered the gamma in
Y1 <- gamma(U1) #Y = g^-1(U1) and is considered the "data" in Bayesian Inference
X = Y1[U2<=f(Y2,Y1)/g(Y2)/m(Y2)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(x,t){t*exp(-t*x)} #target pdf: exponential pdf
g <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
m <- function(t) exp(-t)/t
X <- acceptReject(f,g,m,n)
hist(X,freq = FALSE, breaks = 35, main = paste("Acceptance Rate:",length(X)/n))
xx = seq(min(X),max(X),0.01)
lines(xx,f(xx,xx),col = 'red')#true normal pdf
lines(xx,g(xx)*m(xx),col = 'green')#adjusted pdf
help("gamma")
acceptReject <- function(f,a,b,m,n){
accept <- 0
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
X = Y[U2<=f(a,b,U1)/m(U1)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, shape, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,g,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
X = Y[U2<=f(a,b,U1)/m(U1)]
return(X)
}
set.seed(100)
n <- 100 #number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, shape, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,g,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
X = Y[U2<=f(a,b,U1)/m(U1)]
return(X)
}
set.seed(100)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, shape, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
help("exp")
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(100)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, shape, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(100)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(100)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(a,b,x){dgamma(x, alpha = a+1, beta = b+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(100)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(A,B,x){dgamma(x, alpha = A+1, beta = B+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(500)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(A,B,x){dgamma(x, alpha = A+1, beta = B+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(500)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(A,B,x){dgamma(x, alpha = A+1, beta = B+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
acceptReject <- function(f,a,b,m,n){
X <- rep(0,n)
#step1: generate Y and U's
U1 <- runif(n,0,1) #first set of randomly generated values
U2 <- runif(n,0,1) #second set of randomly generated values
Y <- dexp(U1)
X = Y[U2<=f(a,b,Y)/m(Y)]
return(X)
}
set.seed(500)
n <- 100#number of samples
a <- 4#alpha
b <- 2#beta
f <- function(A,B,x){dgamma(x, alpha = A+1, beta = B+x, log = FALSE)}
m <- function(x){(b^(a)*x^(a-1)*exp(-b*x))/(gamma(a))} #instrumental pdf: Gamma distribution
#M is a constant that maximizes the acceptance rejection, so we can take f/g and set it equal to zero to find the maximum value?
X <- acceptReject(f,a,b,m,n)
