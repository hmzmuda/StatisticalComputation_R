"0","bisection <- function(f, a, b, nMax, tol)"
"0","{"
"0","  #initiate the a and b value, assume intervals will be proper"
"0","  iteration <- 0"
"0","  #check bounds"
"0","  if(f(a) == 0.0){"
"0","    return(a)"
"0","  }"
"0","  if(f(b) == 0.0){"
"0","    return(b)"
"0","  }"
"0","  # Begin method's loop"
"0","  for (i in 1:nMax){"
"0","    c <- (a + b)/2 #Calc the midpoint"
"0","    if(f(c) != 0) {"
"0","      #TRUE: f(c) > tol AND i <=NMAX"
"0","      if((abs(f(c)) > tol)) {"
"0","        if(sign(f(c)) == sign(f(a))) {"
"0","          a <- c"
"0","          b <- b"
"0","        }"
"0","        else {"
"0","          a <- a"
"0","          b <- c"
"0","        }"
"0","        c <- (a + b)/2"
"0","        iteration = iteration + 1"
"0","      }"
"0","      else {"
"0","        #the f(c) is within the range of tolerance"
"0","        break"
"0","      }"
"0","    }"
"0","    else {"
"0","      #FALSE: f(c) is a root"
"0","      break"
"0","    }"
"0","  }"
"0","  return(list(""it"" = iteration, ""root"" = c))"
"0","}"
"0",""
"0","fcn <- function(x){sqrt(x)-cos(x)}"
"0","bmMe <- bisection(fcn, 0, 2, 3, 1e-7)"
"0","bmMe$root"
"1","[1]"
"1"," 0.625"
"1","
"
